{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,+BAAqD;AACrD,oEAAwD;AAGlD,IAAA,8CAA2E,EAAzE,cAAI,EAAE,gDAAqB,CAA8C;AAEjF,IAAM,UAAU,GAAG,UAAC,cAAiC;IACnD,OAAA,UAAC,GAAqB,EAAE,GAAa,EAAE,IAAkB;QACvD,IAAI,cAAc,EAAE;YAClB,GAAG,CAAC,KAAK,GAAG,mBAAW,CAAC,uBAAe,cAClC,cAAc,IACjB,UAAU,6BAAA,IACV,CAAC,CAAA;SACJ;aAAM;YACL,GAAG,CAAC,KAAK,GAAG,mBAAW,CAAC,uBAAe,CAAC;gBACtC,UAAU,6BAAA;aACX,CAAC,CAAC,CAAA;SACJ;QACD,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACpD,IAAI,EAAE,CAAA;IACR,CAAC;AAbD,CAaC,CAAA;AAGH,MAAM,CAAC,OAAO,GAAG;IACf,UAAU,YAAA;CACX,CAAA","sourcesContent":["import { ReducersMapObject } from '../node_modules/redux';\nimport { Response, NextFunction } from 'express';\nimport { combineReducers, createStore } from 'redux';\nimport navigation from './navigation/navigationReducer';\nimport { RequestWithStore } from './types/global';\n\nconst { init, requestPayloadFactory } = require('./navigation/navigationActions')\n\nconst middleWare = (customReducers: ReducersMapObject) =>\n  (req: RequestWithStore, res: Response, next: NextFunction) => {\n    if (customReducers) {\n      req.Store = createStore(combineReducers({\n        ...customReducers,\n        navigation,\n      }))\n    } else {\n      req.Store = createStore(combineReducers({\n        navigation,\n      }))\n    }\n    req.Store.dispatch(init(requestPayloadFactory(req)))\n    next()\n  }\n\n\nmodule.exports = {\n  middleWare\n}\n"]}